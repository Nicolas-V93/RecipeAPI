// <auto-generated />
using System;
using Imi.Project.Api.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Imi.Project.Api.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230111092811_InitDB")]
    partial class InitDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasApprovedTerms")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000001",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c8554266-b401-4519-9aeb-a9283053fc58",
                            Email = "admin@imi.be",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@IMI.BE",
                            NormalizedUserName = "IMIADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEPtDTkLU06I+YQy7jSvZS4/h2rMA91aGU+paPPBytJDJa5IWHnxPZzw2fnQDJPsWWw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VVPCRDAS3MJWQD5CSW2GWPRADBXEZINA",
                            TwoFactorEnabled = false,
                            UserName = "ImiAdmin"
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000002",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2b3ba136-4654-49c1-8329-1e266a1f7453",
                            Email = "user@imi.be",
                            EmailConfirmed = true,
                            HasApprovedTerms = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER@IMI.BE",
                            NormalizedUserName = "IMIUSER",
                            PasswordHash = "AQAAAAEAACcQAAAAEKCACHdSz3e8sntPjaNj7cjQZUNOLlgMK02tdmIWsLVH/G0e00yXxwKW8PC3KQlmwA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "WWPCRDAS3MJWQD5CSW2GWPRADBXEZINA",
                            TwoFactorEnabled = false,
                            UserName = "ImiUser"
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000003",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fad66526-654c-4000-b7b3-30349c41f171",
                            Email = "refuser@imi.be",
                            EmailConfirmed = true,
                            HasApprovedTerms = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "REFUSER@IMI.BE",
                            NormalizedUserName = "IMIREFUSER",
                            PasswordHash = "AQAAAAEAACcQAAAAEBT2V93bk+EArCe3xSeiNC9iL+PJYqN6Z3+ABINgH9xbCwdGnKwNMaNiTCKn85hYGg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "YYPCRDAS3MJWQD5CSW2GWPRADBXEZINA",
                            TwoFactorEnabled = false,
                            UserName = "ImiRefuser"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f0c3843a-2aee-43e4-af44-365a7f2868d2"),
                            Name = "breakfast"
                        },
                        new
                        {
                            Id = new Guid("636a054a-f350-4675-b641-315d211a0f53"),
                            Name = "lunch"
                        },
                        new
                        {
                            Id = new Guid("da9c469c-aef9-428a-9b19-c90276f5e96f"),
                            Name = "dinner"
                        },
                        new
                        {
                            Id = new Guid("5731b9da-0e5e-4ef6-87f8-284573493e7e"),
                            Name = "snack"
                        },
                        new
                        {
                            Id = new Guid("47e6d388-7265-49fe-98e6-ff81c8191721"),
                            Name = "side dish"
                        },
                        new
                        {
                            Id = new Guid("68cd9404-7f0c-4247-a7a1-6f8c2f120e78"),
                            Name = "beverage"
                        },
                        new
                        {
                            Id = new Guid("c4df166c-75e1-4888-8395-7d9751dd0fb0"),
                            Name = "dessert"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Diet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Diets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f2dd17b2-45bf-4fba-9c9a-d519dbcac9e3"),
                            Name = "anything"
                        },
                        new
                        {
                            Id = new Guid("ec107ba9-769f-412b-be15-fbab5a77ff1c"),
                            Name = "vegetarian"
                        },
                        new
                        {
                            Id = new Guid("a88c70b9-4e14-4ece-9c2a-8ae80b56afcd"),
                            Name = "vegan"
                        },
                        new
                        {
                            Id = new Guid("d0b9aaed-62c3-4c37-91f7-6bbc57aff51a"),
                            Name = "paleo"
                        },
                        new
                        {
                            Id = new Guid("911b0e25-57ff-4b44-9b82-962a9a66d659"),
                            Name = "keto"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("31eaa15a-7c94-4206-a588-e2536fa0b399"),
                            Name = "red onion"
                        },
                        new
                        {
                            Id = new Guid("a344772e-11a8-4a6d-bf47-3d9a6935825b"),
                            Name = "salt"
                        },
                        new
                        {
                            Id = new Guid("b469f796-8a51-4b24-ae61-419961f06180"),
                            Name = "pepper"
                        },
                        new
                        {
                            Id = new Guid("a07a2c48-a9de-44ef-a52a-20bae5821b2f"),
                            Name = "avocado"
                        },
                        new
                        {
                            Id = new Guid("231fe3ab-d192-4ee2-9ad6-1def1c5bb298"),
                            Name = "vanilla"
                        },
                        new
                        {
                            Id = new Guid("21799d42-c1c9-44ec-b2a0-41e199d57944"),
                            Name = "kosher salt"
                        },
                        new
                        {
                            Id = new Guid("571dcf9c-d268-4018-81b5-8f49ac3d26f5"),
                            Name = "unsweetened cacao powder"
                        },
                        new
                        {
                            Id = new Guid("e9608381-4253-4f4d-b1e2-fa537e5594e0"),
                            Name = "bell pepper"
                        },
                        new
                        {
                            Id = new Guid("f52dba50-7832-437a-ad7e-95024fe3ec88"),
                            Name = "garlic"
                        },
                        new
                        {
                            Id = new Guid("d7f1c8aa-eb8b-4606-91ed-3c0d63b55981"),
                            Name = "chili powder"
                        },
                        new
                        {
                            Id = new Guid("6d065d6b-6bfd-4ba7-9221-96d2a26fadf8"),
                            Name = "ground cumin"
                        },
                        new
                        {
                            Id = new Guid("375627f6-719d-40fc-afd1-2ad4b7418642"),
                            Name = "dried oregano"
                        },
                        new
                        {
                            Id = new Guid("2e48fed1-fdcf-4421-8ac0-6649670accc3"),
                            Name = "smoked paprika"
                        },
                        new
                        {
                            Id = new Guid("7f12e6c4-d2ae-4d17-b8a1-c86be4a4d8c9"),
                            Name = "firm tofu"
                        },
                        new
                        {
                            Id = new Guid("dc93cdaa-3392-47c2-846e-35e9b41547ed"),
                            Name = "oat milk"
                        },
                        new
                        {
                            Id = new Guid("2e680992-51a9-4993-885b-4cb0da5dfd31"),
                            Name = "turmeric"
                        },
                        new
                        {
                            Id = new Guid("fa6e2093-48d0-42bb-9f29-5a32a309e9e2"),
                            Name = "nutritional yeast"
                        },
                        new
                        {
                            Id = new Guid("b0b19759-885a-436a-8992-51bb0ced01f4"),
                            Name = "banana"
                        },
                        new
                        {
                            Id = new Guid("dffe97a7-a724-4676-addc-800c1f947004"),
                            Name = "almond milk"
                        },
                        new
                        {
                            Id = new Guid("8145feec-0dfb-4fe8-b647-1ec357f37d25"),
                            Name = "greek yogurt"
                        },
                        new
                        {
                            Id = new Guid("56469591-0026-4890-a8e7-562f13f8b69c"),
                            Name = "strawberries"
                        },
                        new
                        {
                            Id = new Guid("a8592ecf-9e7a-4d5c-8de4-224f50c3bd79"),
                            Name = "raspberries"
                        },
                        new
                        {
                            Id = new Guid("7af60fc5-2248-4444-bea5-6428fae6b26e"),
                            Name = "blackberries"
                        },
                        new
                        {
                            Id = new Guid("a7926359-306b-4582-b28a-d9ee4bba88b8"),
                            Name = "tuna"
                        },
                        new
                        {
                            Id = new Guid("8066eade-199f-4b52-8e2b-f84a9f28c050"),
                            Name = "lime"
                        },
                        new
                        {
                            Id = new Guid("30d52d32-4c30-43f6-8cb1-73cb044b721e"),
                            Name = "celery"
                        },
                        new
                        {
                            Id = new Guid("686bd9dd-ff1c-4a8e-97b3-2057c6279652"),
                            Name = "jalapenos"
                        },
                        new
                        {
                            Id = new Guid("3c9dbd1a-5890-4aea-8e8c-f6846ec0b311"),
                            Name = "heavy cream"
                        },
                        new
                        {
                            Id = new Guid("a5bb32ae-5086-41e7-a00f-780e4f61c2f3"),
                            Name = "keto chocolate chips"
                        },
                        new
                        {
                            Id = new Guid("bcc4460e-e664-4b69-9171-151b636adf74"),
                            Name = "honey"
                        },
                        new
                        {
                            Id = new Guid("7023c350-e78b-48fe-b62f-93ebedca6f97"),
                            Name = "bacon"
                        },
                        new
                        {
                            Id = new Guid("25b4bd2f-c70e-49ef-9dd3-365e4317a568"),
                            Name = "yellow onion"
                        },
                        new
                        {
                            Id = new Guid("559d2ce2-5f6e-4f8e-b85f-a8def3fb8650"),
                            Name = "celery stalks"
                        },
                        new
                        {
                            Id = new Guid("033291a3-b3ec-4771-a1f0-a3e4456efad2"),
                            Name = "lean ground beef"
                        },
                        new
                        {
                            Id = new Guid("23ef218b-e374-471f-9968-b1df6987a48d"),
                            Name = "vanilla ice cream"
                        },
                        new
                        {
                            Id = new Guid("8dc954e5-a92a-4000-8bdc-878dfb9af389"),
                            Name = "milk"
                        },
                        new
                        {
                            Id = new Guid("645dcd09-9191-42ca-a1e1-8585680c8342"),
                            Name = "whipped topping"
                        },
                        new
                        {
                            Id = new Guid("b2f155d5-161f-45d3-8143-d98f1d7a1fd8"),
                            Name = "sprinkles"
                        },
                        new
                        {
                            Id = new Guid("fe772d41-bfe6-4280-8dc3-f338d815b70b"),
                            Name = "brown rice"
                        },
                        new
                        {
                            Id = new Guid("da652f59-19d8-48bc-a197-81ed0596d660"),
                            Name = "green onion"
                        },
                        new
                        {
                            Id = new Guid("28ad0e27-a012-4030-bdb5-e91c5fb848d0"),
                            Name = "peas"
                        },
                        new
                        {
                            Id = new Guid("02b4cb46-2f3f-410b-9e42-eb8cf66a4a01"),
                            Name = "carrots"
                        },
                        new
                        {
                            Id = new Guid("eebbe687-a467-4662-80bc-85059642bbc6"),
                            Name = "soy sauce"
                        },
                        new
                        {
                            Id = new Guid("21bb0aa8-bfb2-474c-82d6-c9cbc618654e"),
                            Name = "peanut butter"
                        },
                        new
                        {
                            Id = new Guid("5226e4fb-7360-4234-92a0-fa190a24b1be"),
                            Name = "maple syrup"
                        },
                        new
                        {
                            Id = new Guid("8c71cf76-965d-4f46-8555-40474a43d95d"),
                            Name = "sesame oil"
                        },
                        new
                        {
                            Id = new Guid("76ad7715-89bb-46b3-9f14-7840c2e18317"),
                            Name = "all-purpose flour"
                        },
                        new
                        {
                            Id = new Guid("153eb14b-d583-42b3-b81b-b3d9a60bef24"),
                            Name = "baking powder"
                        },
                        new
                        {
                            Id = new Guid("67b9885f-c3cd-439e-9c63-bea9906b25a8"),
                            Name = "white sugar"
                        },
                        new
                        {
                            Id = new Guid("d7ec5abd-cbd6-4b4a-9b08-3c71a17194ab"),
                            Name = "butter"
                        },
                        new
                        {
                            Id = new Guid("e5256e0b-305f-461e-8682-15987b4f300d"),
                            Name = "egg"
                        },
                        new
                        {
                            Id = new Guid("f852c5d5-3d69-4969-a460-757a59c8d159"),
                            Name = "rapeseed oil"
                        },
                        new
                        {
                            Id = new Guid("619729eb-e375-419e-bf7c-c67941a98753"),
                            Name = "lemon"
                        },
                        new
                        {
                            Id = new Guid("1ebb27d0-d452-4b42-a6c3-081412c58fc7"),
                            Name = "balsemic vinegar"
                        },
                        new
                        {
                            Id = new Guid("4370914a-555c-47d7-a40f-a757e5280d79"),
                            Name = "basil"
                        },
                        new
                        {
                            Id = new Guid("682e2bfb-7d18-448f-b695-14db95997088"),
                            Name = "potatoe"
                        },
                        new
                        {
                            Id = new Guid("055c9cbf-a0ae-4d21-99f4-9181d181f54b"),
                            Name = "green beans"
                        },
                        new
                        {
                            Id = new Guid("f0ba43a5-f6af-43c8-87d3-999662121166"),
                            Name = "cherry tomato"
                        },
                        new
                        {
                            Id = new Guid("4e6cdcf9-3ff7-44a9-ae73-14177d0b0ce7"),
                            Name = "romaine lettuce"
                        },
                        new
                        {
                            Id = new Guid("ccb17653-ae3f-40b4-98f0-c44e24fbb7be"),
                            Name = "kalamata olive"
                        },
                        new
                        {
                            Id = new Guid("64c972c0-bd32-4f82-94ae-2942305ee1ec"),
                            Name = "protein powder"
                        },
                        new
                        {
                            Id = new Guid("ec15c23a-5748-42a5-b6ee-5cea71198c78"),
                            Name = "chocolate chips"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Instruction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StepNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Instructions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("204fc10b-5784-45e8-bc8a-3e9ea9ba0f83"),
                            Description = "Scramble the block of tofu with your hands (see picture above) into small and bigger pieces.",
                            RecipeId = new Guid("12e1bb6f-ebf7-4157-b665-e01313e4a468"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("0e266aa8-9df5-4d8a-b02c-156a2a1218f3"),
                            Description = "Heat 1 tablespoon of oil on medium heat in a pan. Caramelize the chopped red onions",
                            RecipeId = new Guid("12e1bb6f-ebf7-4157-b665-e01313e4a468"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("7cc433c8-ea61-4880-83d1-8f05c49ed705"),
                            Description = "Add the scrambled tofu and stir for 1 minute.",
                            RecipeId = new Guid("12e1bb6f-ebf7-4157-b665-e01313e4a468"),
                            StepNumber = 3
                        },
                        new
                        {
                            Id = new Guid("967daf09-a092-47d9-bd31-62e906fce65b"),
                            Description = "Add the 1/2 cup of oat milk and stir until the tofu has soaked up most of it.",
                            RecipeId = new Guid("12e1bb6f-ebf7-4157-b665-e01313e4a468"),
                            StepNumber = 4
                        },
                        new
                        {
                            Id = new Guid("5646611e-5ea4-45cf-8009-5d77bd97fc61"),
                            Description = "When there is only a small amount of milk remaining, add all of the remaining ingredients and stir for another 3-4 minutes on low to medium heat.",
                            RecipeId = new Guid("12e1bb6f-ebf7-4157-b665-e01313e4a468"),
                            StepNumber = 5
                        },
                        new
                        {
                            Id = new Guid("7d246619-c7b8-46f8-8d4d-6dfc86f01c68"),
                            Description = "Serve with fresh bread.",
                            RecipeId = new Guid("12e1bb6f-ebf7-4157-b665-e01313e4a468"),
                            StepNumber = 6
                        },
                        new
                        {
                            Id = new Guid("af48ebb8-d285-4176-ab2c-76b36fc92b3d"),
                            Description = "In a blender, combine all ingredients and blend until smooth.",
                            RecipeId = new Guid("bd4f4ee3-e085-42cf-9962-253fff6e64e1"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("4d27dc97-349a-4569-9f8b-decf6c440445"),
                            Description = "Divide between 2 cups and top with blackberries, if desired.",
                            RecipeId = new Guid("bd4f4ee3-e085-42cf-9962-253fff6e64e1"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("f7577784-675c-49a2-8f59-99121822c101"),
                            Description = "Mash the avocado and lime juice together with sea salt.",
                            RecipeId = new Guid("cea7bbf3-19d2-48be-b3ca-fdb0806c6a47"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("e7f2d930-1b22-4903-80a3-eea0403ef530"),
                            Description = "Add the tuna, cilantro, red onion, celery, and jalapeños (if using). Stir everything together, breaking apart any large pieces of tuna as needed.",
                            RecipeId = new Guid("cea7bbf3-19d2-48be-b3ca-fdb0806c6a47"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("f44820e1-efd0-4f8b-a2ba-7912b0eab29f"),
                            Description = "Adjust salt and jalapeños to taste if needed. Serve immediately.",
                            RecipeId = new Guid("cea7bbf3-19d2-48be-b3ca-fdb0806c6a47"),
                            StepNumber = 3
                        },
                        new
                        {
                            Id = new Guid("4d3d72f9-f286-4795-b822-dc2c0b5360a4"),
                            Description = "In a food processor or blender, blend all ingredients except chocolate curls until smooth.",
                            RecipeId = new Guid("90047163-0479-45c6-835a-d1f50167031f"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("bdb410d1-bd56-4301-acdb-398056738541"),
                            Description = "Transfer to serving glasses and refrigerate 30 minutes and up to 1 hour. Garnish with chocolate curls if using.",
                            RecipeId = new Guid("90047163-0479-45c6-835a-d1f50167031f"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("e381dcce-e003-4e57-a5ad-d38635632ffa"),
                            Description = "In a large pot over medium heat, cook bacon. When bacon is crisp, remove from pot with a slotted spoon. Add onion, celery, and peppers to pot and cook until soft, 6 minutes. Add garlic and cook until fragrant, 1 minute more.",
                            RecipeId = new Guid("f15fd0f4-5bfb-4118-8f85-e40c1325f748"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("7ac340d9-a837-4faf-a81f-6a751d3112e0"),
                            Description = "Push vegetables to one side of the pan and add beef. Cook, stirring occasionally, until no pink remains. Drain fat and return to heat.",
                            RecipeId = new Guid("f15fd0f4-5bfb-4118-8f85-e40c1325f748"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("ce761ab4-7276-4bb9-ba6b-8b21657b6a8b"),
                            Description = "Add chili powder, cumin, oregano, and paprika and season with salt and pepper. Stir to combine and cook 2 minutes more. Add tomatoes and broth and bring to a simmer. Let cook 10 to 15 more minutes, until chili has thickened slightly. ",
                            RecipeId = new Guid("f15fd0f4-5bfb-4118-8f85-e40c1325f748"),
                            StepNumber = 3
                        },
                        new
                        {
                            Id = new Guid("72afa0b3-04ec-4bbd-96d1-3338b8c9f4f7"),
                            Description = "Ladle into bowls and top with reserved bacon, jalapeños, cilantro, and avocado.",
                            RecipeId = new Guid("f15fd0f4-5bfb-4118-8f85-e40c1325f748"),
                            StepNumber = 4
                        },
                        new
                        {
                            Id = new Guid("bd076174-7975-428a-b529-980923a78ad5"),
                            Description = "In a blender, blend together ice cream and milk.",
                            RecipeId = new Guid("b14e9199-5a34-4185-9807-20e905a76a32"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("1055fe83-c5c6-45b9-a5fd-63739f6a47dc"),
                            Description = "Pour into a glass and garnish with whipped topping, sprinkles, cacao powder and a cherry.",
                            RecipeId = new Guid("b14e9199-5a34-4185-9807-20e905a76a32"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("9b665ac9-c848-43f4-9eac-4be718378a8f"),
                            Description = "Preheat oven to 400 degrees F (204 C) and line a baking sheet with parchment paper (or lightly grease with non-stick spray).",
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("37db896f-3fa5-411a-9de2-255c7f636591"),
                            Description = "In the meantime wrap tofu in a clean, absorbent towel and set something heavy on top (such as a cast iron skillet) to press out the liquid.",
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("45cc3320-2826-45ce-ad07-b5c79195fb5d"),
                            Description = "Once the oven is preheated, dice tofu into 1/4-inch cubes and arrange on baking sheet. Bake for 26-30 minutes. You’re looking for golden brown edges and a texture that’s firm to the touch. The longer it bakes, the firmer and crispier it will become, so if you’re looking for softer tofu remove from the oven around the 26-28 minute mark. I prefer crispy tofu, so I bake mine the full 30 minutes. Set aside.",
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            StepNumber = 3
                        },
                        new
                        {
                            Id = new Guid("a114d0bb-154b-4f1f-9e23-55acbcdf0c53"),
                            Description = "While the tofu bakes prepare your rice by bringing 12 cups of water to a boil in a large pot. Once boiling, add rinsed rice and stir. Boil on high uncovered for 30 minutes, then strain for 10 seconds and return to pot removed from the heat. Cover with a lid and let steam for 10 minutes*.",
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            StepNumber = 4
                        },
                        new
                        {
                            Id = new Guid("d204ffbf-638b-4770-a61e-7bb3206909fc"),
                            Description = "While rice and tofu are cooking, prepare sauce by adding all ingredients to a medium-size mixing bowl and whisking to combine. Taste and adjust flavor as needed, adding more tamari or soy sauce for saltiness, peanut butter for creaminess, brown sugar for sweetness, or chili garlic sauce for heat.",
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            StepNumber = 5
                        },
                        new
                        {
                            Id = new Guid("5b60d81a-b143-469f-aae0-f5729324cd40"),
                            Description = "Once the tofu is done baking, add directly to the sauce and marinate for 5 minutes, stirring occasionally",
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            StepNumber = 6
                        },
                        new
                        {
                            Id = new Guid("cccc8024-8a65-40fb-a02b-8d35f0a0aa98"),
                            Description = "Heat a large metal or cast iron skillet over medium heat. Once hot, use a slotted spoon to scoop the tofu into the pan leaving most of the sauce behind. Cook for 3-4 minutes, stirring occasionally, until deep golden brown on all sides (see photo). Lower heat if browning too quickly. Remove from pan and set aside.",
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            StepNumber = 7
                        },
                        new
                        {
                            Id = new Guid("ca2a3a73-58fb-4da2-9f7f-59fb4cf23b49"),
                            Description = "To the still hot pan add garlic, green onion, peas and carrots. Sauté for 3-4 minutes, stirring occasionally, and season with 1 Tbsp (15 ml) tamari or soy sauce",
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            StepNumber = 8
                        },
                        new
                        {
                            Id = new Guid("93233cc4-52b4-410f-a08c-ee1e8a937c25"),
                            Description = "Add cooked rice, tofu, and remaining sauce and stir. Cook over medium-high heat for 3-4 minutes, stirring frequently.",
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            StepNumber = 9
                        },
                        new
                        {
                            Id = new Guid("f432738e-0d14-4048-8e15-fe0013011b77"),
                            Description = "Serve immediately with extra chili garlic sauce or sriracha for heat (optional). Crushed salted, roasted peanuts or cashews make a lovely additional garnish. Leftovers keep well in the refrigerator for 3-4 days, though best when fresh. Reheat in a skillet over medium heat or in the microwave.",
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            StepNumber = 10
                        },
                        new
                        {
                            Id = new Guid("e34fa00d-df53-4057-868a-5522ce62e611"),
                            Description = "Sift flour, baking powder, sugar, and salt together in a large bowl. Make a well in the center and add milk, melted butter, and egg; mix until smooth.",
                            RecipeId = new Guid("4be0635b-dff4-48fc-87d2-e8c05b5d6502"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("82551662-d25f-4f53-a3a1-e3ca287d3764"),
                            Description = "Heat a lightly oiled griddle or pan over medium-high heat. Pour or scoop the batter onto the griddle, using approximately 1/4 cup for each pancake; cook until bubbles form and the edges are dry, about 2 to 3 minutes. Flip and cook until browned on the other side. Repeat with remaining batter.",
                            RecipeId = new Guid("4be0635b-dff4-48fc-87d2-e8c05b5d6502"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("377c8d52-cba8-4c8b-9309-c5f238c72396"),
                            Description = "Mix the dressing ingredients together in a small bowl with 1 tbsp water.",
                            RecipeId = new Guid("8eecc05a-e77f-4dc7-b586-9b5e5c1ffc04"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("7f88e4d8-caa6-4d93-9de5-573dd6b520e0"),
                            Description = "Meanwhile boil the potatoes for 7 mins, add the beans and boil 5 mins more or until both are just tender, then drain. Boil 2 eggs for 8 minutes then shell and halve.",
                            RecipeId = new Guid("8eecc05a-e77f-4dc7-b586-9b5e5c1ffc04"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("649cdf98-ace4-4451-aaf5-5e349766d8e7"),
                            Description = "Toss the beans, potatoes and remaining salad ingredients, except the eggs, together in a large bowl with half the dressing. Arrange the eggs on top and drizzle over the remaining dressing.",
                            RecipeId = new Guid("8eecc05a-e77f-4dc7-b586-9b5e5c1ffc04"),
                            StepNumber = 3
                        },
                        new
                        {
                            Id = new Guid("74afbeb8-4457-4b81-aa56-e36da41c97c5"),
                            Description = "Stir all ingredients except optional chips to form a dough. Either shape into bars with your hands or smooth into a lined 8×8 pan, refrigerate until chilled, then cut into bars.",
                            RecipeId = new Guid("175f8c2e-f14b-402d-9d48-a3f9970ce194"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("af5da275-bb8c-4da8-aa34-8322ab48ac41"),
                            Description = "For the optional chocolate coating, spread the melted chocolate over the pan before chilling. (I usually stir 2 tsp oil into the melted chocolate for a smoother sauce, but it's not required.) Or you can dip the bars into the chocolate sauce individually and then chill to set.",
                            RecipeId = new Guid("175f8c2e-f14b-402d-9d48-a3f9970ce194"),
                            StepNumber = 2
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CookTime")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("DietId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgURL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PrepTime")
                        .HasColumnType("int");

                    b.Property<int>("Servings")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DietId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("12e1bb6f-ebf7-4157-b665-e01313e4a468"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("f0c3843a-2aee-43e4-af44-365a7f2868d2"),
                            CookTime = 30,
                            Description = "A healthy vegan breakfast",
                            DietId = new Guid("a88c70b9-4e14-4ece-9c2a-8ae80b56afcd"),
                            ImgURL = "https://simpleveganblog.com/wp-content/uploads/2022/07/tofu-scramble-1.jpg",
                            PrepTime = 15,
                            Servings = 2,
                            Title = "Scrambled Tofu"
                        },
                        new
                        {
                            Id = new Guid("bd4f4ee3-e085-42cf-9962-253fff6e64e1"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000003",
                            CategoryId = new Guid("68cd9404-7f0c-4247-a7a1-6f8c2f120e78"),
                            CookTime = 10,
                            Description = "A smoothie containing 3 types of berries",
                            DietId = new Guid("f2dd17b2-45bf-4fba-9c9a-d519dbcac9e3"),
                            ImgURL = "https://cookingformysoul.com/wp-content/uploads/2022/05/mixed-berry-smoothie-2-min.jpg",
                            PrepTime = 5,
                            Servings = 2,
                            Title = "Tripple berry smoothie"
                        },
                        new
                        {
                            Id = new Guid("cea7bbf3-19d2-48be-b3ca-fdb0806c6a47"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("636a054a-f350-4675-b641-315d211a0f53"),
                            CookTime = 5,
                            Description = "A fast and healthy lunch, packed with protein, for people in a hurry",
                            DietId = new Guid("f2dd17b2-45bf-4fba-9c9a-d519dbcac9e3"),
                            ImgURL = "https://www.wholesomeyum.com/wp-content/uploads/2019/05/wholesomeyum-avocado-tuna-salad-recipe-1.jpg",
                            PrepTime = 5,
                            Servings = 2,
                            Title = "Tuna avocado salad"
                        },
                        new
                        {
                            Id = new Guid("90047163-0479-45c6-835a-d1f50167031f"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("c4df166c-75e1-4888-8395-7d9751dd0fb0"),
                            CookTime = 60,
                            Description = "This keto mousse gets its rich, creamy texture from avocados.",
                            DietId = new Guid("911b0e25-57ff-4b44-9b82-962a9a66d659"),
                            ImgURL = "https://thebigmansworld.com/wp-content/uploads/2022/07/keto-chocolate-mousse.jpg",
                            PrepTime = 15,
                            Servings = 2,
                            Title = "Keto Chocolate Mousse"
                        },
                        new
                        {
                            Id = new Guid("f15fd0f4-5bfb-4118-8f85-e40c1325f748"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("da9c469c-aef9-428a-9b19-c90276f5e96f"),
                            CookTime = 40,
                            Description = "A hearty bowl of chili is the perfect dinner for a blustery winter day.",
                            DietId = new Guid("d0b9aaed-62c3-4c37-91f7-6bbc57aff51a"),
                            ImgURL = "https://www.laurafuentes.com/wp-content/uploads/2013/10/Paleo_chili_recipe-card_1-2.jpg",
                            PrepTime = 15,
                            Servings = 2,
                            Title = "Paleo Chili"
                        },
                        new
                        {
                            Id = new Guid("b14e9199-5a34-4185-9807-20e905a76a32"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("68cd9404-7f0c-4247-a7a1-6f8c2f120e78"),
                            CookTime = 5,
                            Description = "This easy milkshake recipe gives you the perfect ratio of milk to ice cream and is completely customizable! ",
                            DietId = new Guid("f2dd17b2-45bf-4fba-9c9a-d519dbcac9e3"),
                            ImgURL = "https://images.unsplash.com/photo-1568901839119-631418a3910d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8bWlsa3NoYWtlfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500&q=60",
                            PrepTime = 5,
                            Servings = 1,
                            Title = "Easy Vanilla Milkshake"
                        },
                        new
                        {
                            Id = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("636a054a-f350-4675-b641-315d211a0f53"),
                            CookTime = 60,
                            Description = "Easy, 10-ingredient vegan fried rice that’s loaded with vegetables, crispy baked tofu, and tons of flavor! A healthy, satisfying plant-based side dish or entrée.",
                            DietId = new Guid("a88c70b9-4e14-4ece-9c2a-8ae80b56afcd"),
                            ImgURL = "https://shortgirltallorder.com/wp-content/uploads/2020/03/veggie-fried-rice-square-4.jpg",
                            PrepTime = 15,
                            Servings = 4,
                            Title = "Easy Vegan Fried Rice"
                        },
                        new
                        {
                            Id = new Guid("4be0635b-dff4-48fc-87d2-e8c05b5d6502"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("c4df166c-75e1-4888-8395-7d9751dd0fb0"),
                            CookTime = 15,
                            Description = "I found this pancake recipe in my Grandma's recipe book. Judging from the weathered look of this recipe card, this was a family favorite.",
                            DietId = new Guid("f2dd17b2-45bf-4fba-9c9a-d519dbcac9e3"),
                            ImgURL = "https://images.unsplash.com/photo-1565299543923-37dd37887442?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=781&q=80",
                            PrepTime = 5,
                            Servings = 8,
                            Title = "Good Old-Fashioned Pancakes"
                        },
                        new
                        {
                            Id = new Guid("8eecc05a-e77f-4dc7-b586-9b5e5c1ffc04"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000003",
                            CategoryId = new Guid("47e6d388-7265-49fe-98e6-ff81c8191721"),
                            CookTime = 10,
                            Description = "A vegetarian Niçoise salad, that's packed with goodness - fibre, folate, iron, vitamin c and gluten-free too",
                            DietId = new Guid("ec107ba9-769f-412b-be15-fbab5a77ff1c"),
                            ImgURL = "https://images.unsplash.com/photo-1512621776951-a57141f2eefd?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80",
                            PrepTime = 10,
                            Servings = 2,
                            Title = "Egg Niçoise salad"
                        },
                        new
                        {
                            Id = new Guid("175f8c2e-f14b-402d-9d48-a3f9970ce194"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000003",
                            CategoryId = new Guid("5731b9da-0e5e-4ef6-87f8-284573493e7e"),
                            CookTime = 5,
                            Description = "If you’re still buying protein bars at the store, this quick and simple vegan protein bar recipe might completely change your life…",
                            DietId = new Guid("f2dd17b2-45bf-4fba-9c9a-d519dbcac9e3"),
                            ImgURL = "https://images.unsplash.com/photo-1622484212850-eb596d769edc?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80",
                            PrepTime = 5,
                            Servings = 10,
                            Title = "Easy Homemade Protein Bars"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.RecipeIngredient", b =>
                {
                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IngredientId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UnitId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            IngredientId = new Guid("7f12e6c4-d2ae-4d17-b8a1-c86be4a4d8c9"),
                            RecipeId = new Guid("12e1bb6f-ebf7-4157-b665-e01313e4a468"),
                            Amount = 1.0,
                            UnitId = new Guid("1ed4ac46-1a54-4240-b8d7-ad6672c35e1c")
                        },
                        new
                        {
                            IngredientId = new Guid("31eaa15a-7c94-4206-a588-e2536fa0b399"),
                            RecipeId = new Guid("12e1bb6f-ebf7-4157-b665-e01313e4a468"),
                            Amount = 0.5,
                            UnitId = new Guid("acf51f0b-a255-43ff-80f2-3411f936ff5e")
                        },
                        new
                        {
                            IngredientId = new Guid("e9608381-4253-4f4d-b1e2-fa537e5594e0"),
                            RecipeId = new Guid("12e1bb6f-ebf7-4157-b665-e01313e4a468"),
                            Amount = 0.5,
                            UnitId = new Guid("acf51f0b-a255-43ff-80f2-3411f936ff5e")
                        },
                        new
                        {
                            IngredientId = new Guid("dc93cdaa-3392-47c2-846e-35e9b41547ed"),
                            RecipeId = new Guid("12e1bb6f-ebf7-4157-b665-e01313e4a468"),
                            Amount = 0.5,
                            UnitId = new Guid("2f048952-7c04-4d58-9509-cb94500ecb05")
                        },
                        new
                        {
                            IngredientId = new Guid("2e680992-51a9-4993-885b-4cb0da5dfd31"),
                            RecipeId = new Guid("12e1bb6f-ebf7-4157-b665-e01313e4a468"),
                            Amount = 0.75,
                            UnitId = new Guid("a754048a-1cf4-467c-8294-0d2ce7cc3644")
                        },
                        new
                        {
                            IngredientId = new Guid("fa6e2093-48d0-42bb-9f29-5a32a309e9e2"),
                            RecipeId = new Guid("12e1bb6f-ebf7-4157-b665-e01313e4a468"),
                            Amount = 1.0,
                            UnitId = new Guid("b7c64215-20a5-4e61-ad06-b030ab2740fd")
                        },
                        new
                        {
                            IngredientId = new Guid("b0b19759-885a-436a-8992-51bb0ced01f4"),
                            RecipeId = new Guid("bd4f4ee3-e085-42cf-9962-253fff6e64e1"),
                            Amount = 1.0,
                            UnitId = new Guid("acf51f0b-a255-43ff-80f2-3411f936ff5e")
                        },
                        new
                        {
                            IngredientId = new Guid("dffe97a7-a724-4676-addc-800c1f947004"),
                            RecipeId = new Guid("bd4f4ee3-e085-42cf-9962-253fff6e64e1"),
                            Amount = 250.0,
                            UnitId = new Guid("c90d0134-d29d-45e4-ac10-f753cd40f408")
                        },
                        new
                        {
                            IngredientId = new Guid("8145feec-0dfb-4fe8-b647-1ec357f37d25"),
                            RecipeId = new Guid("bd4f4ee3-e085-42cf-9962-253fff6e64e1"),
                            Amount = 200.0,
                            UnitId = new Guid("943e5a57-5f4e-4d3f-aa36-2804f3d31459")
                        },
                        new
                        {
                            IngredientId = new Guid("56469591-0026-4890-a8e7-562f13f8b69c"),
                            RecipeId = new Guid("bd4f4ee3-e085-42cf-9962-253fff6e64e1"),
                            Amount = 150.0,
                            UnitId = new Guid("943e5a57-5f4e-4d3f-aa36-2804f3d31459")
                        },
                        new
                        {
                            IngredientId = new Guid("7af60fc5-2248-4444-bea5-6428fae6b26e"),
                            RecipeId = new Guid("bd4f4ee3-e085-42cf-9962-253fff6e64e1"),
                            Amount = 150.0,
                            UnitId = new Guid("943e5a57-5f4e-4d3f-aa36-2804f3d31459")
                        },
                        new
                        {
                            IngredientId = new Guid("a8592ecf-9e7a-4d5c-8de4-224f50c3bd79"),
                            RecipeId = new Guid("bd4f4ee3-e085-42cf-9962-253fff6e64e1"),
                            Amount = 150.0,
                            UnitId = new Guid("943e5a57-5f4e-4d3f-aa36-2804f3d31459")
                        },
                        new
                        {
                            IngredientId = new Guid("a07a2c48-a9de-44ef-a52a-20bae5821b2f"),
                            RecipeId = new Guid("cea7bbf3-19d2-48be-b3ca-fdb0806c6a47"),
                            Amount = 2.0,
                            UnitId = new Guid("acf51f0b-a255-43ff-80f2-3411f936ff5e")
                        },
                        new
                        {
                            IngredientId = new Guid("a7926359-306b-4582-b28a-d9ee4bba88b8"),
                            RecipeId = new Guid("cea7bbf3-19d2-48be-b3ca-fdb0806c6a47"),
                            Amount = 140.0,
                            UnitId = new Guid("943e5a57-5f4e-4d3f-aa36-2804f3d31459")
                        },
                        new
                        {
                            IngredientId = new Guid("8066eade-199f-4b52-8e2b-f84a9f28c050"),
                            RecipeId = new Guid("cea7bbf3-19d2-48be-b3ca-fdb0806c6a47"),
                            Amount = 2.0,
                            UnitId = new Guid("b7c64215-20a5-4e61-ad06-b030ab2740fd")
                        },
                        new
                        {
                            IngredientId = new Guid("a344772e-11a8-4a6d-bf47-3d9a6935825b"),
                            RecipeId = new Guid("cea7bbf3-19d2-48be-b3ca-fdb0806c6a47"),
                            Amount = 0.5,
                            UnitId = new Guid("a754048a-1cf4-467c-8294-0d2ce7cc3644")
                        },
                        new
                        {
                            IngredientId = new Guid("30d52d32-4c30-43f6-8cb1-73cb044b721e"),
                            RecipeId = new Guid("cea7bbf3-19d2-48be-b3ca-fdb0806c6a47"),
                            Amount = 3.0,
                            UnitId = new Guid("b7c64215-20a5-4e61-ad06-b030ab2740fd")
                        },
                        new
                        {
                            IngredientId = new Guid("686bd9dd-ff1c-4a8e-97b3-2057c6279652"),
                            RecipeId = new Guid("cea7bbf3-19d2-48be-b3ca-fdb0806c6a47"),
                            Amount = 1.0,
                            UnitId = new Guid("b7c64215-20a5-4e61-ad06-b030ab2740fd")
                        },
                        new
                        {
                            IngredientId = new Guid("31eaa15a-7c94-4206-a588-e2536fa0b399"),
                            RecipeId = new Guid("cea7bbf3-19d2-48be-b3ca-fdb0806c6a47"),
                            Amount = 3.0,
                            UnitId = new Guid("b7c64215-20a5-4e61-ad06-b030ab2740fd")
                        },
                        new
                        {
                            IngredientId = new Guid("a07a2c48-a9de-44ef-a52a-20bae5821b2f"),
                            RecipeId = new Guid("90047163-0479-45c6-835a-d1f50167031f"),
                            Amount = 2.0,
                            UnitId = new Guid("acf51f0b-a255-43ff-80f2-3411f936ff5e")
                        },
                        new
                        {
                            IngredientId = new Guid("3c9dbd1a-5890-4aea-8e8c-f6846ec0b311"),
                            RecipeId = new Guid("90047163-0479-45c6-835a-d1f50167031f"),
                            Amount = 0.75,
                            UnitId = new Guid("2f048952-7c04-4d58-9509-cb94500ecb05")
                        },
                        new
                        {
                            IngredientId = new Guid("a5bb32ae-5086-41e7-a00f-780e4f61c2f3"),
                            RecipeId = new Guid("90047163-0479-45c6-835a-d1f50167031f"),
                            Amount = 0.5,
                            UnitId = new Guid("2f048952-7c04-4d58-9509-cb94500ecb05")
                        },
                        new
                        {
                            IngredientId = new Guid("bcc4460e-e664-4b69-9171-151b636adf74"),
                            RecipeId = new Guid("90047163-0479-45c6-835a-d1f50167031f"),
                            Amount = 0.25,
                            UnitId = new Guid("2f048952-7c04-4d58-9509-cb94500ecb05")
                        },
                        new
                        {
                            IngredientId = new Guid("571dcf9c-d268-4018-81b5-8f49ac3d26f5"),
                            RecipeId = new Guid("90047163-0479-45c6-835a-d1f50167031f"),
                            Amount = 3.0,
                            UnitId = new Guid("b7c64215-20a5-4e61-ad06-b030ab2740fd")
                        },
                        new
                        {
                            IngredientId = new Guid("231fe3ab-d192-4ee2-9ad6-1def1c5bb298"),
                            RecipeId = new Guid("90047163-0479-45c6-835a-d1f50167031f"),
                            Amount = 1.0,
                            UnitId = new Guid("a754048a-1cf4-467c-8294-0d2ce7cc3644")
                        },
                        new
                        {
                            IngredientId = new Guid("21799d42-c1c9-44ec-b2a0-41e199d57944"),
                            RecipeId = new Guid("90047163-0479-45c6-835a-d1f50167031f"),
                            Amount = 0.5,
                            UnitId = new Guid("a754048a-1cf4-467c-8294-0d2ce7cc3644")
                        },
                        new
                        {
                            IngredientId = new Guid("7023c350-e78b-48fe-b62f-93ebedca6f97"),
                            RecipeId = new Guid("f15fd0f4-5bfb-4118-8f85-e40c1325f748"),
                            Amount = 1.0,
                            UnitId = new Guid("2f048952-7c04-4d58-9509-cb94500ecb05")
                        },
                        new
                        {
                            IngredientId = new Guid("25b4bd2f-c70e-49ef-9dd3-365e4317a568"),
                            RecipeId = new Guid("f15fd0f4-5bfb-4118-8f85-e40c1325f748"),
                            Amount = 0.5,
                            UnitId = new Guid("acf51f0b-a255-43ff-80f2-3411f936ff5e")
                        },
                        new
                        {
                            IngredientId = new Guid("559d2ce2-5f6e-4f8e-b85f-a8def3fb8650"),
                            RecipeId = new Guid("f15fd0f4-5bfb-4118-8f85-e40c1325f748"),
                            Amount = 2.0,
                            UnitId = new Guid("acf51f0b-a255-43ff-80f2-3411f936ff5e")
                        },
                        new
                        {
                            IngredientId = new Guid("033291a3-b3ec-4771-a1f0-a3e4456efad2"),
                            RecipeId = new Guid("f15fd0f4-5bfb-4118-8f85-e40c1325f748"),
                            Amount = 0.5,
                            UnitId = new Guid("2f048952-7c04-4d58-9509-cb94500ecb05")
                        },
                        new
                        {
                            IngredientId = new Guid("d7f1c8aa-eb8b-4606-91ed-3c0d63b55981"),
                            RecipeId = new Guid("f15fd0f4-5bfb-4118-8f85-e40c1325f748"),
                            Amount = 2.0,
                            UnitId = new Guid("b7c64215-20a5-4e61-ad06-b030ab2740fd")
                        },
                        new
                        {
                            IngredientId = new Guid("6d065d6b-6bfd-4ba7-9221-96d2a26fadf8"),
                            RecipeId = new Guid("f15fd0f4-5bfb-4118-8f85-e40c1325f748"),
                            Amount = 2.0,
                            UnitId = new Guid("a754048a-1cf4-467c-8294-0d2ce7cc3644")
                        },
                        new
                        {
                            IngredientId = new Guid("375627f6-719d-40fc-afd1-2ad4b7418642"),
                            RecipeId = new Guid("f15fd0f4-5bfb-4118-8f85-e40c1325f748"),
                            Amount = 2.0,
                            UnitId = new Guid("a754048a-1cf4-467c-8294-0d2ce7cc3644")
                        },
                        new
                        {
                            IngredientId = new Guid("2e48fed1-fdcf-4421-8ac0-6649670accc3"),
                            RecipeId = new Guid("f15fd0f4-5bfb-4118-8f85-e40c1325f748"),
                            Amount = 2.0,
                            UnitId = new Guid("b7c64215-20a5-4e61-ad06-b030ab2740fd")
                        },
                        new
                        {
                            IngredientId = new Guid("23ef218b-e374-471f-9968-b1df6987a48d"),
                            RecipeId = new Guid("b14e9199-5a34-4185-9807-20e905a76a32"),
                            Amount = 1.5,
                            UnitId = new Guid("2f048952-7c04-4d58-9509-cb94500ecb05")
                        },
                        new
                        {
                            IngredientId = new Guid("8dc954e5-a92a-4000-8bdc-878dfb9af389"),
                            RecipeId = new Guid("b14e9199-5a34-4185-9807-20e905a76a32"),
                            Amount = 1.5,
                            UnitId = new Guid("2f048952-7c04-4d58-9509-cb94500ecb05")
                        },
                        new
                        {
                            IngredientId = new Guid("b2f155d5-161f-45d3-8143-d98f1d7a1fd8"),
                            RecipeId = new Guid("b14e9199-5a34-4185-9807-20e905a76a32"),
                            Amount = 0.0,
                            UnitId = new Guid("a6d6a4d0-2942-46ca-b6c5-8c47960a1388")
                        },
                        new
                        {
                            IngredientId = new Guid("645dcd09-9191-42ca-a1e1-8585680c8342"),
                            RecipeId = new Guid("b14e9199-5a34-4185-9807-20e905a76a32"),
                            Amount = 0.0,
                            UnitId = new Guid("a6d6a4d0-2942-46ca-b6c5-8c47960a1388")
                        },
                        new
                        {
                            IngredientId = new Guid("571dcf9c-d268-4018-81b5-8f49ac3d26f5"),
                            RecipeId = new Guid("b14e9199-5a34-4185-9807-20e905a76a32"),
                            Amount = 0.5,
                            UnitId = new Guid("a754048a-1cf4-467c-8294-0d2ce7cc3644")
                        },
                        new
                        {
                            IngredientId = new Guid("7f12e6c4-d2ae-4d17-b8a1-c86be4a4d8c9"),
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            Amount = 1.0,
                            UnitId = new Guid("2f048952-7c04-4d58-9509-cb94500ecb05")
                        },
                        new
                        {
                            IngredientId = new Guid("fe772d41-bfe6-4280-8dc3-f338d815b70b"),
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            Amount = 1.0,
                            UnitId = new Guid("2f048952-7c04-4d58-9509-cb94500ecb05")
                        },
                        new
                        {
                            IngredientId = new Guid("f52dba50-7832-437a-ad7e-95024fe3ec88"),
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            Amount = 4.0,
                            UnitId = new Guid("81311dec-3196-4045-9372-3dc4e7dc2543")
                        },
                        new
                        {
                            IngredientId = new Guid("da652f59-19d8-48bc-a197-81ed0596d660"),
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            Amount = 1.0,
                            UnitId = new Guid("2f048952-7c04-4d58-9509-cb94500ecb05")
                        },
                        new
                        {
                            IngredientId = new Guid("28ad0e27-a012-4030-bdb5-e91c5fb848d0"),
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            Amount = 0.5,
                            UnitId = new Guid("2f048952-7c04-4d58-9509-cb94500ecb05")
                        },
                        new
                        {
                            IngredientId = new Guid("02b4cb46-2f3f-410b-9e42-eb8cf66a4a01"),
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            Amount = 0.5,
                            UnitId = new Guid("2f048952-7c04-4d58-9509-cb94500ecb05")
                        },
                        new
                        {
                            IngredientId = new Guid("eebbe687-a467-4662-80bc-85059642bbc6"),
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            Amount = 3.0,
                            UnitId = new Guid("b7c64215-20a5-4e61-ad06-b030ab2740fd")
                        },
                        new
                        {
                            IngredientId = new Guid("5226e4fb-7360-4234-92a0-fa190a24b1be"),
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            Amount = 2.0,
                            UnitId = new Guid("b7c64215-20a5-4e61-ad06-b030ab2740fd")
                        },
                        new
                        {
                            IngredientId = new Guid("21bb0aa8-bfb2-474c-82d6-c9cbc618654e"),
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            Amount = 1.0,
                            UnitId = new Guid("b7c64215-20a5-4e61-ad06-b030ab2740fd")
                        },
                        new
                        {
                            IngredientId = new Guid("8c71cf76-965d-4f46-8555-40474a43d95d"),
                            RecipeId = new Guid("728c4eb5-4ff4-4273-a2b2-3363c4ee442b"),
                            Amount = 1.0,
                            UnitId = new Guid("a754048a-1cf4-467c-8294-0d2ce7cc3644")
                        },
                        new
                        {
                            IngredientId = new Guid("76ad7715-89bb-46b3-9f14-7840c2e18317"),
                            RecipeId = new Guid("4be0635b-dff4-48fc-87d2-e8c05b5d6502"),
                            Amount = 1.5,
                            UnitId = new Guid("2f048952-7c04-4d58-9509-cb94500ecb05")
                        },
                        new
                        {
                            IngredientId = new Guid("153eb14b-d583-42b3-b81b-b3d9a60bef24"),
                            RecipeId = new Guid("4be0635b-dff4-48fc-87d2-e8c05b5d6502"),
                            Amount = 3.5,
                            UnitId = new Guid("a754048a-1cf4-467c-8294-0d2ce7cc3644")
                        },
                        new
                        {
                            IngredientId = new Guid("67b9885f-c3cd-439e-9c63-bea9906b25a8"),
                            RecipeId = new Guid("4be0635b-dff4-48fc-87d2-e8c05b5d6502"),
                            Amount = 1.0,
                            UnitId = new Guid("b7c64215-20a5-4e61-ad06-b030ab2740fd")
                        },
                        new
                        {
                            IngredientId = new Guid("a344772e-11a8-4a6d-bf47-3d9a6935825b"),
                            RecipeId = new Guid("4be0635b-dff4-48fc-87d2-e8c05b5d6502"),
                            Amount = 0.25,
                            UnitId = new Guid("a754048a-1cf4-467c-8294-0d2ce7cc3644")
                        },
                        new
                        {
                            IngredientId = new Guid("8dc954e5-a92a-4000-8bdc-878dfb9af389"),
                            RecipeId = new Guid("4be0635b-dff4-48fc-87d2-e8c05b5d6502"),
                            Amount = 1.25,
                            UnitId = new Guid("2f048952-7c04-4d58-9509-cb94500ecb05")
                        },
                        new
                        {
                            IngredientId = new Guid("d7ec5abd-cbd6-4b4a-9b08-3c71a17194ab"),
                            RecipeId = new Guid("4be0635b-dff4-48fc-87d2-e8c05b5d6502"),
                            Amount = 3.0,
                            UnitId = new Guid("b7c64215-20a5-4e61-ad06-b030ab2740fd")
                        },
                        new
                        {
                            IngredientId = new Guid("e5256e0b-305f-461e-8682-15987b4f300d"),
                            RecipeId = new Guid("4be0635b-dff4-48fc-87d2-e8c05b5d6502"),
                            Amount = 1.0,
                            UnitId = new Guid("acf51f0b-a255-43ff-80f2-3411f936ff5e")
                        },
                        new
                        {
                            IngredientId = new Guid("5226e4fb-7360-4234-92a0-fa190a24b1be"),
                            RecipeId = new Guid("4be0635b-dff4-48fc-87d2-e8c05b5d6502"),
                            Amount = 1.0,
                            UnitId = new Guid("b7c64215-20a5-4e61-ad06-b030ab2740fd")
                        },
                        new
                        {
                            IngredientId = new Guid("f852c5d5-3d69-4969-a460-757a59c8d159"),
                            RecipeId = new Guid("8eecc05a-e77f-4dc7-b586-9b5e5c1ffc04"),
                            Amount = 2.0,
                            UnitId = new Guid("b7c64215-20a5-4e61-ad06-b030ab2740fd")
                        },
                        new
                        {
                            IngredientId = new Guid("619729eb-e375-419e-bf7c-c67941a98753"),
                            RecipeId = new Guid("8eecc05a-e77f-4dc7-b586-9b5e5c1ffc04"),
                            Amount = 1.0,
                            UnitId = new Guid("acf51f0b-a255-43ff-80f2-3411f936ff5e")
                        },
                        new
                        {
                            IngredientId = new Guid("1ebb27d0-d452-4b42-a6c3-081412c58fc7"),
                            RecipeId = new Guid("8eecc05a-e77f-4dc7-b586-9b5e5c1ffc04"),
                            Amount = 1.0,
                            UnitId = new Guid("a754048a-1cf4-467c-8294-0d2ce7cc3644")
                        },
                        new
                        {
                            IngredientId = new Guid("f52dba50-7832-437a-ad7e-95024fe3ec88"),
                            RecipeId = new Guid("8eecc05a-e77f-4dc7-b586-9b5e5c1ffc04"),
                            Amount = 1.0,
                            UnitId = new Guid("81311dec-3196-4045-9372-3dc4e7dc2543")
                        },
                        new
                        {
                            IngredientId = new Guid("4370914a-555c-47d7-a40f-a757e5280d79"),
                            RecipeId = new Guid("8eecc05a-e77f-4dc7-b586-9b5e5c1ffc04"),
                            Amount = 0.0,
                            UnitId = new Guid("a6d6a4d0-2942-46ca-b6c5-8c47960a1388")
                        },
                        new
                        {
                            IngredientId = new Guid("e5256e0b-305f-461e-8682-15987b4f300d"),
                            RecipeId = new Guid("8eecc05a-e77f-4dc7-b586-9b5e5c1ffc04"),
                            Amount = 2.0,
                            UnitId = new Guid("acf51f0b-a255-43ff-80f2-3411f936ff5e")
                        },
                        new
                        {
                            IngredientId = new Guid("682e2bfb-7d18-448f-b695-14db95997088"),
                            RecipeId = new Guid("8eecc05a-e77f-4dc7-b586-9b5e5c1ffc04"),
                            Amount = 250.0,
                            UnitId = new Guid("943e5a57-5f4e-4d3f-aa36-2804f3d31459")
                        },
                        new
                        {
                            IngredientId = new Guid("055c9cbf-a0ae-4d21-99f4-9181d181f54b"),
                            RecipeId = new Guid("8eecc05a-e77f-4dc7-b586-9b5e5c1ffc04"),
                            Amount = 200.0,
                            UnitId = new Guid("943e5a57-5f4e-4d3f-aa36-2804f3d31459")
                        },
                        new
                        {
                            IngredientId = new Guid("4e6cdcf9-3ff7-44a9-ae73-14177d0b0ce7"),
                            RecipeId = new Guid("8eecc05a-e77f-4dc7-b586-9b5e5c1ffc04"),
                            Amount = 15.0,
                            UnitId = new Guid("943e5a57-5f4e-4d3f-aa36-2804f3d31459")
                        },
                        new
                        {
                            IngredientId = new Guid("ccb17653-ae3f-40b4-98f0-c44e24fbb7be"),
                            RecipeId = new Guid("8eecc05a-e77f-4dc7-b586-9b5e5c1ffc04"),
                            Amount = 6.0,
                            UnitId = new Guid("acf51f0b-a255-43ff-80f2-3411f936ff5e")
                        },
                        new
                        {
                            IngredientId = new Guid("21bb0aa8-bfb2-474c-82d6-c9cbc618654e"),
                            RecipeId = new Guid("175f8c2e-f14b-402d-9d48-a3f9970ce194"),
                            Amount = 1.5,
                            UnitId = new Guid("2f048952-7c04-4d58-9509-cb94500ecb05")
                        },
                        new
                        {
                            IngredientId = new Guid("64c972c0-bd32-4f82-94ae-2942305ee1ec"),
                            RecipeId = new Guid("175f8c2e-f14b-402d-9d48-a3f9970ce194"),
                            Amount = 0.75,
                            UnitId = new Guid("2f048952-7c04-4d58-9509-cb94500ecb05")
                        },
                        new
                        {
                            IngredientId = new Guid("5226e4fb-7360-4234-92a0-fa190a24b1be"),
                            RecipeId = new Guid("175f8c2e-f14b-402d-9d48-a3f9970ce194"),
                            Amount = 0.25,
                            UnitId = new Guid("2f048952-7c04-4d58-9509-cb94500ecb05")
                        },
                        new
                        {
                            IngredientId = new Guid("a344772e-11a8-4a6d-bf47-3d9a6935825b"),
                            RecipeId = new Guid("175f8c2e-f14b-402d-9d48-a3f9970ce194"),
                            Amount = 0.5,
                            UnitId = new Guid("a754048a-1cf4-467c-8294-0d2ce7cc3644")
                        },
                        new
                        {
                            IngredientId = new Guid("ec15c23a-5748-42a5-b6ee-5cea71198c78"),
                            RecipeId = new Guid("175f8c2e-f14b-402d-9d48-a3f9970ce194"),
                            Amount = 35.0,
                            UnitId = new Guid("943e5a57-5f4e-4d3f-aa36-2804f3d31459")
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateTimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("446da3e2-f422-4aea-bd61-125ab389287e"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000003",
                            Comment = "Great recipe!",
                            CreationDate = new DateTime(2023, 1, 11, 10, 28, 10, 292, DateTimeKind.Local).AddTicks(7620),
                            Rating = 4,
                            RecipeId = new Guid("12e1bb6f-ebf7-4157-b665-e01313e4a468"),
                            UpdateTimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0eae271e-d883-4132-ac0d-7bc1b79b625a"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000003",
                            Comment = "Didn't taste good",
                            CreationDate = new DateTime(2022, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 2,
                            RecipeId = new Guid("12e1bb6f-ebf7-4157-b665-e01313e4a468"),
                            UpdateTimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5c5f1dae-3ae7-408a-a186-d2b9a784ea41"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CreationDate = new DateTime(2022, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 3,
                            RecipeId = new Guid("bd4f4ee3-e085-42cf-9962-253fff6e64e1"),
                            UpdateTimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a0fc3e04-8b78-4ad5-85f0-a525c7b978c3"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            Comment = "Definitely will eat this again!",
                            CreationDate = new DateTime(2022, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 5,
                            RecipeId = new Guid("bd4f4ee3-e085-42cf-9962-253fff6e64e1"),
                            UpdateTimeStamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            Id = new Guid("943e5a57-5f4e-4d3f-aa36-2804f3d31459"),
                            Name = "grams"
                        },
                        new
                        {
                            Id = new Guid("c90d0134-d29d-45e4-ac10-f753cd40f408"),
                            Name = "ml"
                        },
                        new
                        {
                            Id = new Guid("b7c64215-20a5-4e61-ad06-b030ab2740fd"),
                            Name = "tbsp"
                        },
                        new
                        {
                            Id = new Guid("a754048a-1cf4-467c-8294-0d2ce7cc3644"),
                            Name = "tsp"
                        },
                        new
                        {
                            Id = new Guid("acf51f0b-a255-43ff-80f2-3411f936ff5e"),
                            Name = "piece"
                        },
                        new
                        {
                            Id = new Guid("1ed4ac46-1a54-4240-b8d7-ad6672c35e1c"),
                            Name = "block"
                        },
                        new
                        {
                            Id = new Guid("2f048952-7c04-4d58-9509-cb94500ecb05"),
                            Name = "cup"
                        },
                        new
                        {
                            Id = new Guid("a6d6a4d0-2942-46ca-b6c5-8c47960a1388"),
                            Name = "garnish"
                        },
                        new
                        {
                            Id = new Guid("81311dec-3196-4045-9372-3dc4e7dc2543"),
                            Name = "clove"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000001",
                            ConcurrencyStamp = "9924acbf-7bf0-4b90-8625-14a66134ae17",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000002",
                            ConcurrencyStamp = "b83e3fe4-9124-45a1-9de5-4ac6bf9c0580",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "sub",
                            ClaimValue = "00000000-0000-0000-0000-000000000001",
                            UserId = "00000000-0000-0000-0000-000000000001"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ClaimValue = "ImiAdmin",
                            UserId = "00000000-0000-0000-0000-000000000001"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                            ClaimValue = "admin@imi.be",
                            UserId = "00000000-0000-0000-0000-000000000001"
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "hasApprovedTerms",
                            ClaimValue = "",
                            UserId = "00000000-0000-0000-0000-000000000001"
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "Admin",
                            UserId = "00000000-0000-0000-0000-000000000001"
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "sub",
                            ClaimValue = "00000000-0000-0000-0000-000000000002",
                            UserId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ClaimValue = "ImiUser",
                            UserId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                            ClaimValue = "user@imi.be",
                            UserId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "hasApprovedTerms",
                            ClaimValue = "True",
                            UserId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "User",
                            UserId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "sub",
                            ClaimValue = "00000000-0000-0000-0000-000000000003",
                            UserId = "00000000-0000-0000-0000-000000000003"
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ClaimValue = "ImiRefuser",
                            UserId = "00000000-0000-0000-0000-000000000003"
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                            ClaimValue = "refuser@imi.be",
                            UserId = "00000000-0000-0000-0000-000000000003"
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "hasApprovedTerms",
                            ClaimValue = "False",
                            UserId = "00000000-0000-0000-0000-000000000003"
                        },
                        new
                        {
                            Id = 15,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "User",
                            UserId = "00000000-0000-0000-0000-000000000003"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "00000000-0000-0000-0000-000000000001",
                            RoleId = "00000000-0000-0000-0000-000000000001"
                        },
                        new
                        {
                            UserId = "00000000-0000-0000-0000-000000000002",
                            RoleId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            UserId = "00000000-0000-0000-0000-000000000003",
                            RoleId = "00000000-0000-0000-0000-000000000002"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Instruction", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.Recipe", "Recipe")
                        .WithMany("Instructions")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Recipe", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("Imi.Project.Api.Core.Entities.Category", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Imi.Project.Api.Core.Entities.Diet", "Diet")
                        .WithMany("Recipes")
                        .HasForeignKey("DietId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("Category");

                    b.Navigation("Diet");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Review", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.Recipe", "Recipe")
                        .WithMany("Reviews")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Category", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Diet", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Recipe", b =>
                {
                    b.Navigation("Instructions");

                    b.Navigation("RecipeIngredients");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
